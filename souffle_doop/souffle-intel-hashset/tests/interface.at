# Souffle - A Datalog Compiler
# Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at:
# - https://opensource.org/licenses/UPL
# - <souffle root>/licenses/SOUFFLE-UPL.txt

dnl Execute a positive interface test case
dnl $1 -- test case
dnl $2 -- category
m4_define([TEST_EVAL_INTERFACE],[
  m4_define([TESTNAME],[$1])
  m4_define([CATEGORY],[$2])
  m4_define([TESTDIR],["$TESTS"/CATEGORY/TESTNAME])
  m4_define([PROGRAM],[TESTDIR/TESTNAME.dl])
  m4_define([FACTS],[TESTDIR/facts])
  # invoke souffle
  AT_CHECK(["$SOUFFLE" -D- -o $1 -F FACTS PROGRAM 1>TESTNAME.out 2>TESTNAME.err], [0])
  # remove executable and re-build it from scratch
  AT_CHECK([rm $1 2>>TESTNAME.err],[0])
  AT_CHECK(["$CXX" "-I$SOUFFLE_INC" $CXXFLAGS $CPPFLAGS -D__EMBEDDED_SOUFFLE__ -o $1 TESTDIR/driver.cpp $1.cpp $LIBS $LDFLAGS 2>>TESTNAME.err],[0])
  AT_CHECK([./$1 FACTS 1>TESTNAME.out 2>>TESTNAME.err], [0])
  SAME_FILE([TESTNAME.out],[TESTDIR/TESTNAME.out])
])

dnl Execute a negative interface test case
dnl $1 -- test case
dnl $2 -- category
m4_define([TEST_EVAL_ERROR_INTERFACE],[
  m4_define([TESTNAME],[$1])
  m4_define([CATEGORY],[$2])
  m4_define([TESTDIR],["$TESTS"/CATEGORY/TESTNAME])
  m4_define([PROGRAM],[TESTDIR/TESTNAME.dl])
  m4_define([FACTS],[TESTDIR/facts])
  # invoke souffle
  AT_CHECK(["$SOUFFLE" -D- -g $1.cpp -F FACTS PROGRAM 1>TESTNAME.out 2>TESTNAME.err], [0])
  # remove executable and re-build it from scratch
  AT_CHECK([rm TESTNAME.err],[0])
  AT_CHECK(["$CXX" "-I$SOUFFLE_INC" $CXXFLAGS $CPPFLAGS -D__EMBEDDED_SOUFFLE__ -o $1 TESTDIR/driver.cpp $1.cpp $LIBS $LDFLAGS 2>>TESTNAME.err],[0])
  AT_CHECK([rm TESTNAME.err],[0])
  AT_CHECK([./$1 FACTS 1>TESTNAME.out 2>>TESTNAME.err], [1])
  SAME_FILE([TESTNAME.out],[TESTDIR/TESTNAME.out])
  SAME_FILE([TESTNAME.err],[TESTDIR/TESTNAME.err])
])

dnl Positive interface testcase for Souffle
dnl $1 -- test name
dnl $2 -- category
m4_define([POSITIVE_INTERFACE_TEST],[
  AT_SETUP([$1])
  TEST_EVAL_INTERFACE([$1],[$2])
  AT_CLEANUP([])
])

dnl Negative interface testcase for Souffle
dnl $1 -- test name
dnl $2 -- category
m4_define([NEGATIVE_INTERFACE_TEST],[
  AT_SETUP([$1])
  TEST_EVAL_ERROR_INTERFACE([$1],[$2])
  AT_CLEANUP([])
])

##########################################################################

POSITIVE_INTERFACE_TEST([insert_print],[interface])
POSITIVE_INTERFACE_TEST([insert_for],[interface])
POSITIVE_INTERFACE_TEST([load_print],[interface])
NEGATIVE_INTERFACE_TEST([signal_error],[interface])
