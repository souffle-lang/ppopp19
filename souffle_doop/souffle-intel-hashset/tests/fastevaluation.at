# Souffle - A Datalog Compiler
# Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at:
# - https://opensource.org/licenses/UPL
# - <souffle root>/licenses/SOUFFLE-UPL.txt

dnl Positive test cases for evaluating Datalog programs

POSITIVE_TEST([aggregates2],[evaluation])
POSITIVE_TEST([aggregates],[evaluation])
POSITIVE_TEST([aliases],[evaluation])
POSITIVE_TEST([arithm],[evaluation])
POSITIVE_TEST([binop],[evaluation])
POSITIVE_TEST([cat],[evaluation])
POSITIVE_TEST([comp-override1],[evaluation])
POSITIVE_TEST([comp-override2],[evaluation])
POSITIVE_TEST([comp-override3],[evaluation])
POSITIVE_TEST([components3],[evaluation])
POSITIVE_TEST([contains],[evaluation])
POSITIVE_TEST([count_sccs1],[evaluation])
POSITIVE_TEST([counter],[evaluation])
POSITIVE_TEST([cproject],[evaluation])
POSITIVE_TEST([empty_relations],[evaluation])
POSITIVE_TEST([existential],[evaluation])
POSITIVE_TEST([facts],[evaluation])
POSITIVE_TEST([independent_body1],[evaluation])
POSITIVE_TEST([index],[evaluation])
POSITIVE_TEST([indirect_negation],[evaluation])
POSITIVE_TEST([inline_functors],[evaluation])
POSITIVE_TEST([inline_negation1],[evaluation])
POSITIVE_TEST([inline_records],[evaluation])
POSITIVE_TEST([inline_underscore],[evaluation])
POSITIVE_TEST([inline_unification],[evaluation])
POSITIVE_TEST([list],[evaluation])
POSITIVE_TEST([magic_2sat],[evaluation])
POSITIVE_TEST([magic_aggregates],[evaluation])
POSITIVE_TEST([match3],[evaluation])
POSITIVE_TEST([mutrecursion],[evaluation])
POSITIVE_TEST([neg5],[evaluation])
POSITIVE_TEST([neg6],[evaluation])
POSITIVE_TEST([number_constants],[evaluation])
POSITIVE_TEST([plus],[evaluation])
POSITIVE_TEST([range],[evaluation])
POSITIVE_TEST([rec_lists],[evaluation])
POSITIVE_TEST([recursion],[evaluation])
POSITIVE_TEST([relop],[evaluation])
POSITIVE_TEST([subsumption],[evaluation])
POSITIVE_TEST([subtype],[evaluation])
POSITIVE_TEST([sum-aggregate],[evaluation])
POSITIVE_TEST([term],[evaluation])
POSITIVE_TEST([turing1],[evaluation])
POSITIVE_TEST([unpacking],[evaluation])
